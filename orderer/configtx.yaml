Organizations:
    - &OrdererOrg
        Name: OrdererMSP
        ID: OrdererMSP
        MSPDir: crypto-config/ordererOrganizations/oil.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"
                
    - &bafsorg
        Name: bafsorgmsp
        ID: bafsorgmsp
        MSPDir: crypto-config/peerOrganizations/bafsorg.oil.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('bafsorgmsp.member')"
            Writers:
                Type: Signature
                Rule: "OR('bafsorgmsp.member')"
            Admins:
                Type: Signature
                Rule: "OR('bafsorgmsp.admin')"
        AnchorPeers:
            - Host: 10.15.216.250
              Port: 7151

    - &exciseorg
        Name: exciseorgmsp
        ID: exciseorgmsp
        MSPDir: crypto-config/peerOrganizations/exciseorg.oil.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('exciseorgmsp.member')"
            Writers:
                Type: Signature
                Rule: "OR('exciseorgmsp.member')"
            Admins:
                Type: Signature
                Rule: "OR('exciseorgmsp.admin')"
        AnchorPeers:
            - Host: 10.15.216.250
              Port: 7251

    - &cdorg
        Name: cdorgmsp
        ID: cdorgmsp
        MSPDir: crypto-config/peerOrganizations/cdorg.oil.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('cdorgmsp.member')"
            Writers:
                Type: Signature
                Rule: "OR('cdorgmsp.member')"
            Admins:
                Type: Signature
                Rule: "OR('cdorgmsp.admin')"
        AnchorPeers:
            - Host: 10.15.216.250
              Port: 7351

    - &airlineorg
        Name: airlineorgmsp
        ID: airlineorgmsp
        MSPDir: crypto-config/peerOrganizations/airlineorg.oil.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('airlineorgmsp.member')"
            Writers:
                Type: Signature
                Rule: "OR('airlineorgmsp.member')"
            Admins:
                Type: Signature
                Rule: "OR('airlineorgmsp.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('airlineorgmsp.member')"
        AnchorPeers:
            - Host: 10.15.216.250
              Port: 7451
              
################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.
    # Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        # V1.4.3 for Channel is a catchall flag for behavior which has been
        # determined to be desired for all orderers and peers running at the v1.4.3
        # level, but which would be incompatible with orderers and peers from
        # prior releases.
        # Prior to enabling V1.4.3 channel capabilities, ensure that all
        # orderers and peers on a channel are at v1.4.3 or later.
        V1_4_3: true
        # V1.3 for Channel enables the new non-backwards compatible
        # features and fixes of fabric v1.3
        V1_3: false
        # V1.1 for Channel enables the new non-backwards compatible
        # features and fixes of fabric v1.1
        V1_1: false

    # Orderer capabilities apply only to the orderers, and may be safely
    # used with prior release peers.
    # Set the value of the capability to true to require it.
    Orderer: &OrdererCapabilities
        # V1.4.2 for Orderer is a catchall flag for behavior which has been
        # determined to be desired for all orderers running at the v1.4.2
        # level, but which would be incompatible with orderers from prior releases.
        # Prior to enabling V1.4.2 orderer capabilities, ensure that all
        # orderers on a channel are at v1.4.2 or later.
        V1_4_2: true
        # V1.1 for Orderer enables the new non-backwards compatible
        # features and fixes of fabric v1.1
        V1_1: false

    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release orderers.
    # Set the value of the capability to true to require it.
    Application: &ApplicationCapabilities
        # V1.4.2 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.4.2.
        V1_4_2: true
        # V1.3 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.3.
        V1_3: false
        # V1.2 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.2 (note, this need not be set if
        # later version capabilities are set)
        V1_2: false
        # V1.1 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.1 (note, this need not be set if
        # later version capabilities are set).
        V1_1: false
################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Application policies, their canonical path is
    #   /Channel/Application/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    Capabilities:
        <<: *ApplicationCapabilities
################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start
    # Available types are "solo" and "kafka"
    OrdererType: solo

    Addresses:
        - 10.15.216.250:7050
        - 10.15.216.250:8050
        - 10.15.216.250:9050
        - 10.15.216.250:10050
        - 10.15.216.250:11050

    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 98 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

    Kafka:
        # Brokers: A list of Kafka brokers to which the orderer connects
        # NOTE: Use IP:port notation
        Brokers:
            - 10.15.216.250:9092

    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Orderer policies, their canonical path is
    #   /Channel/Orderer/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

    # EtcdRaft:
    #     # The set of Raft replicas for this network. For the etcd/raft-based
    #     # implementation, we expect every replica to also be an OSN. Therefore,
    #     # a subset of the host:port items enumerated in this list should be
    #     # replicated under the Orderer.Addresses key above.
    #     Consenters:
    #         - Host: 10.15.216.250
    #           Port: 7050
    #           ClientTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer.oil.com/tls/server.crt
    #           ServerTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer.oil.com/tls/server.crt
    #         - Host: 10.15.216.250
    #           Port: 8050
    #           ClientTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer2.oil.com/tls/server.crt
    #           ServerTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer2.oil.com/tls/server.crt
    #         - Host: 10.15.216.250
    #           Port: 9050
    #           ClientTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer3.oil.com/tls/server.crt
    #           ServerTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer3.oil.com/tls/server.crt
    #         - Host: 10.15.216.250
    #           Port: 10050
    #           ClientTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer4.oil.com/tls/server.crt
    #           ServerTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer4.oil.com/tls/server.crt
    #         - Host: 10.15.216.250
    #           Port: 11050
    #           ClientTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer5.oil.com/tls/server.crt
    #           ServerTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer5.oil.com/tls/server.crt
              
    #     Options:
    #         # TickInterval is the time interval between two Node.Tick invocations.
    #         TickInterval: 500ms

    #         # ElectionTick is the number of Node.Tick invocations that must pass
    #         # between elections. That is, if a follower does not receive any
    #         # message from the leader of current term before ElectionTick has
    #         # elapsed, it will become candidate and start an election.
    #         # ElectionTick must be greater than HeartbeatTick.
    #         ElectionTick: 10

    #         # HeartbeatTick is the number of Node.Tick invocations that must
    #         # pass between heartbeats. That is, a leader sends heartbeat
    #         # messages to maintain its leadership every HeartbeatTick ticks.
    #         HeartbeatTick: 1

    #         # MaxInflightBlocks limits the max number of in-flight append messages
    #         # during optimistic replication phase.
    #         MaxInflightBlocks: 5

    #         # SnapshotIntervalSize defines number of bytes per which a snapshot is taken
    #         SnapshotIntervalSize: 20 MB
################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults
    # Policies defines the set of policies at this level of the config tree
    # For Channel policies, their canonical path is
    #   /Channel/<PolicyName>
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    # Capabilities describes the channel level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ChannelCapabilities

################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles:
    # BafsOrdererGenesis:
    #     Orderer:
    #         <<: *OrdererDefaults
    #         Organizations:
    #             - *OrdererOrg
    #         Capabilities:
    #             <<: *OrdererCapabilities
    #     Consortiums:
    #         SampleConsortium:
    #             Organizations:
    #                 - *bafsorg
    #                 - *exciseorg
    #                 # - *cdorg
    #                 # - *airlineorg
    TradeOilChannel:
        Consortium: SampleConsortium
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *bafsorg
                - *exciseorg
                - *cdorg
                - *airlineorg
            Capabilities:
                <<: *ApplicationCapabilities
    
    BafsOrdererGenesis:
        <<: *ChannelDefaults
        Capabilities:
            <<: *ChannelCapabilities
        Orderer:
            <<: *OrdererDefaults
            OrdererType: etcdraft
            EtcdRaft:
                Consenters:
                - Host: 10.15.216.250
                  Port: 7050
                  ClientTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer.oil.com/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer.oil.com/tls/server.crt
                - Host: 10.15.216.250
                  Port: 8050
                  ClientTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer2.oil.com/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer2.oil.com/tls/server.crt
                - Host: 10.15.216.250
                  Port: 9050
                  ClientTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer3.oil.com/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer3.oil.com/tls/server.crt
                - Host: 10.15.216.250
                  Port: 10050
                  ClientTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer4.oil.com/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer4.oil.com/tls/server.crt
                - Host: 10.15.216.250
                  Port: 11050
                  ClientTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer5.oil.com/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/oil.com/orderers/orderer5.oil.com/tls/server.crt
            Addresses:
                - 10.15.216.250:7050
                - 10.15.216.250:8050
                - 10.15.216.250:9050
                - 10.15.216.250:10050
                - 10.15.216.250:11050
            Organizations:
            - *OrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
        Application:
            <<: *ApplicationDefaults
            Organizations:
            - <<: *OrdererOrg
        Consortiums:
            SampleConsortium:
                Organizations:
                - *bafsorg
                - *exciseorg
                - *cdorg
                - *airlineorg